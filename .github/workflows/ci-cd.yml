name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        env:
          ACTIVE_MODE: prod
          JWT_SECRET_KEY: ${{ secrets.JWT_SECRET_KEY }}
          DB_URL: ${{ secrets.DB_URL }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          FOOD_API_BASE_URL: ${{ secrets.FOOD_API_BASE_URL }}
          FOOD_API_SERVICE_KEY: ${{ secrets.FOOD_API_SERVICE_KEY }}
          GEMINI_API_URL: ${{ secrets.GEMINI_API_URL }}
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        run: ./gradlew clean build

      - name: Build Docker image
        run: docker build -t juwon0909/heady:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: docker push juwon0909/heady:latest

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ec2-user/heady || { mkdir -p /home/ec2-user/heady && cd /home/ec2-user/heady; }
            
            [ -f docker-compose-prod.yml ] && rm docker-compose-prod.yml
            
            git clone --no-checkout https://github.com/${{ github.repository }}.git temp-repo
            cd temp-repo
            git sparse-checkout init --cone
            git sparse-checkout set docker-compose-prod.yml
            git checkout
            mv docker-compose-prod.yml ../
            cd ..
            rm -rf temp-repo
            
            cat <<EOF > .env
            JWT_SECRET_KEY=${{ secrets.JWT_SECRET_KEY }}
            DB_URL=${{ secrets.DB_URL }}
            DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            DB_USERNAME=${{ secrets.DB_USERNAME }}
            FOOD_API_BASE_URL=${{ secrets.FOOD_API_BASE_URL }}
            FOOD_API_SERVICE_KEY=${{ secrets.FOOD_API_SERVICE_KEY }}
            GEMINI_API_URL=${{ secrets.GEMINI_API_URL }}
            GEMINI_API_KEY=${{ secrets.GEMINI_API_KEY }}
            EOF

            docker compose pull
            docker compose up -d --remove-orphans