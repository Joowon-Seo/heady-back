version: "3.8"

services:
  springboot-app:
    image: juwon0909/heady:latest
    container_name: springboot-app
    ports:
      - "8080:8080"
    environment:
      TZ: Asia/Seoul
      ACTIVE_MODE: prod
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DB_URL: ${DB_URL}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      FOOD_API_BASE_URL: ${FOOD_API_BASE_URL}
      FOOD_API_SERVICE_KEY: ${FOOD_API_SERVICE_KEY}
      GEMINI_API_URL: ${GEMINI_API_URL}
      GEMINI_API_KEY: ${GEMINI_API_KEY}
      KAKAO_CLIENT_ID: ${KAKAO_CLIENT_ID}
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      JAVA_OPTS: "-Xms256m -Xmx256m -XX:+UseG1GC -XX:MaxGCPauseMillis=200"
      command: >
        java $JAVA_OPTS -jar /app.jar
    networks:
      - monitoring_net

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring_net

  grafana:
    image: grafana/grafana-oss:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_SECURITY_ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
    volumes:
      - grafana_data:/var/lib/grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - monitoring_net

  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    restart: unless-stopped
    networks:
      - monitoring_net

  mysql_exporter:
    image: prom/mysqld-exporter
    container_name: mysql_exporter
    command:
      - "--config.my-cnf=/config/.my.cnf"
    volumes:
      - ./mysql-exporter.cnf:/config/.my.cnf:ro
    ports:
      - "9104:9104"
    restart: unless-stopped
    networks:
      - monitoring_net

networks:
  monitoring_net:
    name: monitoring_net


volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
